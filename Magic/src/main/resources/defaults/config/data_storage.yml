

# Use this to provide your own mechanism for saving player data, or select a builtin mechanism.
# The default data store uses yaml files stored in the plugin's data folder
# This migration_folder is where data files are moved to when migrating to a new data store.
player_data_store:
  class: Yaml
  folder: data/players
  migration_folder: data/migrated

# Use this to migrate your Yaml data to your new storage mechanism.
# When this is set, server operators will be prompted to use "/magic migrate" in-game
# to perform player data migration.
# It is best to not have any players on the server while migration is happening!
# Once migration is complete, you can remove this config.
#
# migrate_data_store:
#   class: Yaml
#   folder: data/players

# Switch to SQLite data storage (make sure to comment out or migrate from the above defaults!)
# The database name is optional, and will default to players
# This file gets saved in plugins/Magic/data/<database>.sqlite
#
# player_data_store:
#   class: SQLite
#   database: players

# Switch to MySQL data storage (make sure to comment out or migrate from the above defaults!)
# All parameters are optional, though you will hopefully need to at least specify
# the user and password.
#
# player_data_store:
#   class: MySQL
#   database: magic
#   host: localhost
#   port: 3306
#   user: minecraft
#   password: somethingsecure

# Switch to Postgres data storage (make sure to comment out or migrate from the above defaults!)
# All parameters are optional, though you will hopefully need to at least specify
# the user and password.
#
# player_data_store:
#   class: PostresSQL
#   database: magic
#   host: localhost
#   port: 3306
#   user: minecraft
#   password: somethingsecure

# Auto-save interval in milliseconds (default is 10 minutes, 0 to disable)
auto_save: 600000

# Can be used to turn off saving player data entirely
save_player_data: true

# Turn off the prelogin caching mechanism if you suspect it is causing issues
# Players will log in without magic data for a few ticks
cache_data_on_prelogin: true

# If player data saving is off, you can use this to still have mages expect their data to load
external_player_data: false
